name: Deploy Polkadot.js Apps on AWS

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release version to deploy (e.g., v1.0.0)"
        required: true
      ws_rpc_url:
        description: "WebSocket RPC URL to use (e.g., wss://rpc.polkadot.io)"
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Create user data script
      run: |
        cat > user_data.sh << 'EOL'
        #!/bin/bash
        # Install AWS CLI
        apt-get update
        apt-get install -y awscli
        
        # Set the WS_RPC_URL environment variable
        export WS_RPC_URL="${ws_rpc_url}"
        
        # Run the setup script
        curl -o /tmp/setup.sh https://raw.githubusercontent.com/${{ github.repository }}/${{ github.sha }}/scripts/setup_polkadotjs.sh
        chmod +x /tmp/setup.sh
        /tmp/setup.sh
        EOL
        
        # Replace the placeholder with actual WS_RPC_URL
        sed -i "s|\${ws_rpc_url}|${{ inputs.ws_rpc_url }}|g" user_data.sh

    - name: Create EC2 Instance
      id: create_ec2
      run: |
        # Get latest Amazon Linux 2 AMI ID
        AMI_ID=$(aws ec2 describe-images \
          --owners amazon \
          --filters "Name=name,Values=ubuntu/images/hvm-ssd/ubuntu-22.04-amd64-server-*" \
                    "Name=state,Values=available" \
          --query "reverse(sort_by(Images, &CreationDate))[0].ImageId" \
          --output text)
        
        echo "Using AMI: $AMI_ID"
        
        # Create instance
        INSTANCE_ID=$(aws ec2 run-instances \
          --image-id $AMI_ID \
          --instance-type t3.micro \
          --security-group-ids sg-0442d41440d018db1 \
          --key-name unforkable \
          --user-data file://user_data.sh \
          --tag-specifications "ResourceType=instance,Tags=[{Key=Name,Value=polkadotjs-${{ inputs.release_version }}},{Key=Project,Value=PolkadotJS},{Key=Version,Value=${{ inputs.release_version }}}]" \
          --query 'Instances[0].InstanceId' \
          --output text)
        
        echo "instance_id=$INSTANCE_ID" >> $GITHUB_OUTPUT

    - name: Wait for Instance
      run: |
        aws ec2 wait instance-status-ok \
          --instance-ids ${{ steps.create_ec2.outputs.instance_id }}

    - name: Get Instance IP
      id: get_ip
      run: |
        PUBLIC_IP=$(aws ec2 describe-instances \
          --instance-ids ${{ steps.create_ec2.outputs.instance_id }} \
          --query 'Reservations[0].Instances[0].PublicIpAddress' \
          --output text)
        
        echo "public_ip=$PUBLIC_IP" >> $GITHUB_OUTPUT

    - name: Output Deployment Info
      run: |
        echo "ðŸš€ Deployment completed!"
        echo "Instance ID: ${{ steps.create_ec2.outputs.instance_id }}"
        echo "Public IP: ${{ steps.get_ip.outputs.public_ip }}"
        echo "Access the app at: http://${{ steps.get_ip.outputs.public_ip }}"
        echo "Using WS_RPC_URL: ${{ inputs.ws_rpc_url }}"
